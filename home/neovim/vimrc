set nocompatible
filetype plugin indent on
syntax on
set mouse=

" Miscellaneous
" -------------

" Dark!
set background=dark

" Live previews for search/substitute
set hlsearch
if has('nvim')
  set inccommand=nosplit
end

" Line numbers
set number
set relativenumber

" Wrapping/indentation.
set whichwrap=b,s,<,>,[,]
set autoindent

" Options to make CoC work well.
set hidden
set nobackup
set nowritebackup

" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=50

" Extra space to display messages.
set cmdheight=2

" Turn off error bells
set noerrorbells visualbell t_vb=
autocmd GUIEnter * set visualbell t_vb=

" More powerful backspacing
set backspace=indent,eol,start

" Bash & emacs-style completion for file selection
set wildmode=longest,list
set wildmenu

" Auto-reload files modified outside of vim.
set autoread

" Automatic comment continuation.
set formatoptions+=r

" We don't want double spaces after punctuation since we are not a boomer.
set nojoinspaces

" Ignore case on all-lowercase searches, check case otherwise.
set ignorecase
set smartcase

" Trailing space highlighting
highlight ExtraWhitespace ctermbg=red guibg=red
au BufEnter * match ExtraWhitespace /\s\+$/

" Reopen file to last read line
if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g'\"" | endif
endif

" Filetype settings
" -----------------

" Custom overrides
au BufReadPost,BufNewFile *.rkt set filetype=racket
au filetype racket set lisp
au BufReadPost,BufNewFile *.sqlx set filetype=sql

" Default indentation settings
set expandtab
set autoindent
set tabstop=4
set softtabstop=4
set shiftwidth=4
set formatoptions+=t

" Per-filetype indentation settings

au BufEnter *.txt,*.rst,*.c,*.md,*.mkd,*.markdown,*.tex
  \ set textwidth=79

au BufEnter *.hs,*.ts,*.tsx,*.js,*.jsx,*.v
  \ set textwidth=88

au BufEnter *.py
  \ set textwidth=100

au BufEnter *.md,*.js,*.yml,*.html,*.css,*.json,*.tex,*.vue,*.ex,*.exs,*.scss,*.rb,*.ml,*.jsx,*.ts,*.tsx,*.vim,*.hbs,*.rkt,*.hs,*.v,*.lua
  \ set tabstop=2 |
  \ set softtabstop=2 |
  \ set shiftwidth=2

au BufEnter Makefile,makefile,*.php,*.lua
  \ set noexpandtab

" NVM, turn spell off.
" au BufEnter *.md,*.mkd,*.markdown,*.rst,*.tex,*.txt
"   \ set spell |
"   \ set spellcapcheck=

" For certain C++ codebases.
" au BufEnter *.cpp,*.h
"   \ set tabstop=2 |
"   \ set softtabstop=2 |
"   \ set shiftwidth=2

" Key mappings
" ------------

" Set leader keys
nnoremap <Space> <nop>
let mapleader = " "
let maplocalleader = "\\"

nnoremap <Leader>n <Cmd>noh<CR>

nnoremap <Leader>s <Cmd>split<CR><C-W>j
nnoremap <Leader>v <Cmd>vsplit<CR><C-W>l

nnoremap <Leader>o :silent %w !wl-copy<CR>

nnoremap <C-H> <C-W>h
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k
nnoremap <C-L> <C-W>l

nnoremap - :silent bprevious<CR>
nnoremap = :silent bnext<CR>
nnoremap <Backspace> :silent b#<CR>
nnoremap <Leader><Backspace> :silent bp<bar>silent sp<bar>silent bn<bar>silent bd<CR>

nnoremap <Leader>r- <Cmd>resize -10<CR>
nnoremap <Leader>r= <Cmd>resize +10<CR>
nnoremap <Leader>r, <Cmd>vertical resize -10<CR>
nnoremap <Leader>r. <Cmd>vertical resize +10<CR>

nnoremap M <Cmd>cprevious<CR>
nnoremap m <Cmd>cnext<CR>

" <C-r> in visual mode to S&R selected text.
vnoremap <C-r> "hy:%s/<C-r>h//g<left><left>

" Bind <C-w> to automatically correct the previous word in insert & normal mode.
inoremap <C-w> <c-g>u<Esc>[s1z=`]a<c-g>u
nnoremap <C-w> i<c-g>u<Esc>[s1z=`]a<c-g>u<Esc>

" Create parent directories when saving new files.
au BufWritePre,FileWritePre * silent! call mkdir(expand('<afile>:p:h'), 'p')

" Auto-exit when editing some filetypes. Do not allow them to be edited
au BufEnter *.ogg,*.opus,*.m4a,*.mp4,*.mkv,*.mp3,*.jpg,*.jpeg,*.png,*.webm,*.gif,*.cbz,*.cbr
  \ :q
