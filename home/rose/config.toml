music_source_dir = "~/.music-source"
fuse_mount_dir = "~/music"
ignore_release_directories = [ ".stversions" ]
rename_source_files = true

artist_aliases = [
    { artist = "BTS", aliases = ["V", "RM", "Rap Monster", "Jimin", "j-hope"] },
    { artist = "Four Tet", aliases = ["00110100 01010100", "Kieran Hebden", "⣎⡇ꉺლ༽இ•̛)ྀ◞ ༎ຶ ༽ৣৢ؞ৢ؞ؖ ꉺლ"] },
    { artist = "LOONA", aliases = ["LOONA 1/3", "LOONA ODD EYE CIRCLE", "LOONA yyxy", "Loossemble", "Kim Lip", "HaSeul", "Chuu", "Yves", "HeeJin", "HyunJin", "YeoJin", "ViVi", "JinSoul", "Choerry", "Go Won", "Olivia Hye", "ARTMS"] },
    { artist = "ARTMS", aliases = ["LOONA ODD EYE CIRCLE", "Kim Lip", "HaSeul", "HeeJin", "JinSoul", "Choerry"] },
    { artist = "EXO", aliases = ["EXO-K", "EXO-CBX"] },
    { artist = "tripleS", aliases = ["EVOLution", "LOVElution", "+(KR)ystal Eyes", "Acid Angel from Asia", "Acid Eyes", "Aria", "NXT"] },
    { artist = "Akasha System", aliases = ["DJ Panthr"] },
    { artist = "NewJeans", aliases = ["HANNI", "HAERIN", "MINJI", "DANIELLE", "HYEIN"] },
    { artist = "Calvin Harris", aliases = ["Love Regenerator"] },
    { artist = "LE SSERAFIM", aliases = ["Huh Yunjin"] },
    { artist = "Matthew Dear", aliases = ["Audion"] },
    { artist = "Kanye West", aliases = ["¥$"] },
    { artist = "Ty Dolla $ign", aliases = ["¥$"] },
]

fuse_artists_blacklist = [
    "Disciples",
    "Rosa Walton",
    # Aliases
    "+(KR)ystal Eyes",
    "Acid Angel from Asia",
    "Acid Eyes",
    "EVOLution",
    "LOVElution",
    "Aria",
    "NXT",
    "Kieran Hebden",
    "00110100 01010100",
    "EXO-K",
    "EXO-CBX",
    "Love Regenerator",
    # Classical Performers
    "Alceo Galliera",
    "Alice Sara Ott",
    "André Previn",
    "Berliner Philharmoniker",
    "Bernard Haitink",
    "Birgit Nilsson",
    "Carlos Kleiber",
    "Charles Mackerras",
    "Fritz Wunderlich",
    "Philharmonia Orchestra",
    "Chicago Symphony Orchestra",
    "Chris Merritt",
    "Christa Ludwig",
    "Claudio Abbado",
]

[path_templates]
default.release = """
{% if new %}{{ '{N}' }}{% endif %}
{{ releaseartists | artistsfmt }} -
{% if releaseyear %}{{ releaseyear }}.{% endif %}
{{ releasetitle }}
{% if releasetype == "single" %}- {{ releasetype | releasetypefmt }}{% endif %}
{% if releasetype == "ep" and not releasetitle.endswith("EP") %}- {{ releasetype | releasetypefmt }}{% endif %}
{% if genres %}[{{ genres | arrayfmt }}]{% endif %}
{% if labels %}{{ '{' }}{{ labels | arrayfmt }}{{ '}' }}{% endif %}
"""
# Avoid too much churn in source directory names, so only include relatively
# stable identifiers.
source.release = """
{{ releaseartists | artistsfmt }} -
{% if releaseyear %}{{ releaseyear }}.{% endif %}
{{ releasetitle }}
"""
new_releases.release = """
{{ releaseartists | artistsfmt }} -
{% if releaseyear %}{{ releaseyear }}.{% endif %}
{{ releasetitle }}
{% if releasetype == "single" %}- {{ releasetype | releasetypefmt }}{% endif %}
{% if releasetype == "ep" and not releasetitle.endswith("EP") %}- {{ releasetype | releasetypefmt }}{% endif %}
{% if genres %}[{{ genres | arrayfmt }}]{% endif %}
"""
recently_added_releases.release = """
[{{ added_at[:10] }}]{% if new %}!{% endif %}
{{ releaseartists | artistsfmt }} -
{% if releaseyear %}{{ releaseyear }}.{% endif %}
{{ releasetitle }}
{% if releasetype == "single" %}- {{ releasetype | releasetypefmt }}{% endif %}
{% if releasetype == "ep" and not releasetitle.endswith("EP") %}- {{ releasetype | releasetypefmt }}{% endif %}
{% if genres %}[{{ genres | arrayfmt }}]{% endif %}
"""
artists.release = """
[{{ releasetype | releasetypefmt }}]{% if new %}!{% endif %}
{% if releaseyear %}{{ releaseyear }}.{% else %}0000.{% endif %}
{{ releaseartists | artistsfmt }} -
{{ releasetitle }}
"""
genres.release = """
{% if "Classical Music" in genres or "Classical Music" in parent_genres %}
    {% if new %}{{ '{N}' }}{% endif %}
    {% if releaseartists.composer | length == 0 %}
        [Z]
        {{ releaseartists | artistsfmt }} -
        {% if releaseyear %}{{ releaseyear }}.{% endif %}
        {{ releasetitle }}
    {% elif releasetype == "live" %}
        [L]
        {{ releaseartists.main | artistsarrayfmt }} -
        {% if releaseyear %}{{ releaseyear }}.{% endif %}
        {{ releasetitle }}
        by {{ releaseartists.composer | map(attribute='name') | map('lastname') | arrayfmt }}
    {% else %}
        {% if "Gregorian Chant" in genres or "Gregorian Chant" in parent_genres %} [1]
        {% elif "Baroque Music" in genres or "Baroque Music" in parent_genres %} [2]
        {% elif "Classical Period" in genres or "Classical Period" in parent_genres %} [3]
        {% elif "Romanticism" in genres or "Romanticism" in parent_genres %} [4]
        {% elif "Modern Classical" in genres or "Modern Classical" in parent_genres %} [5]
        {% endif %}
        {{ releaseartists.composer | map(attribute='name') | map('lastname') | arrayfmt }} -
        {% if releasetype == "single" %}L{% endif %}
        {% if compositionyear %}{{ compositionyear }}.{% endif %}
        {{ releasetitle }} -
        {{ releaseartists | artistsfmt(omit=["composer", "guest"]) }}
        {% if releaseyear %}({{ releaseyear }}){% endif %}
    {% endif %}
{% else %}
    {% if new %}{{ '{N}' }}{% endif %}
    {{ releaseartists | artistsfmt }} -
    {% if releaseyear %}{{ releaseyear }}.{% endif %}
    {{ releasetitle }}
    {% if releasetype == "single" %}- {{ releasetype | releasetypefmt }}{% endif %}
    {% if releasetype == "ep" and not releasetitle.endswith("EP") %}- {{ releasetype | releasetypefmt }}{% endif %}
{% endif %}
"""
playlists = """
{{ position }}.
{{ trackartists | artistsfmt }} -
{{ tracktitle }}
{% if releaseyear %}({{ releaseyear }}){% endif %}
"""

# Artist splitting.
[[stored_metadata_rules]]
matcher = "artist:,"
actions = ["split:,"]
ignore = [
    "artist:^Seo Taiji, Boys$",
    "artist:^St. Maur, Clevaux$",
]
[[stored_metadata_rules]]
matcher = "artist: & "
actions = ["split: & "]
ignore = [
    "artist:^Eli & Fur$",
    "artist:^Jos & Eli$",
]
[[stored_metadata_rules]]
matcher = "artist: \\\\ "
actions = ["split: \\\\ "]
[[stored_metadata_rules]]
matcher = "artist: // "
actions = ["split: // "]
[[stored_metadata_rules]]
matcher = "artist: with "
actions = ["split: with "]
[[stored_metadata_rules]]
matcher = "artist: + "
actions = ["split: + "]

# Disk number fixing
[[stored_metadata_rules]]
matcher = "discnumber:^0$"
actions = ["replace:1"]

# Character normalization. The replacements are not stylistically correct, but
# I can input them.
[[stored_metadata_rules]]
matcher = "tracktitle,releasetitle,artist,genre,label:‐"
actions = ["sed:‐:-"]
[[stored_metadata_rules]]
matcher = "tracktitle,releasetitle,artist,genre,label:’"
actions = ["sed:’:'"]
[[stored_metadata_rules]]
matcher = "tracktitle,releasetitle,artist,genre,label:‘"
actions = ["sed:‘:'"]
[[stored_metadata_rules]]
matcher = "tracktitle,releasetitle,artist,genre,label:“"
actions = ["sed:“:\""]
[[stored_metadata_rules]]
matcher = "tracktitle,releasetitle,artist,genre,label:”"
actions = ["sed:”:\""]

# Release type heuristics.
[[stored_metadata_rules]]
matcher = "releasetitle: EP$"
actions = ["releasetype/replace:ep", "releasetitle/sed: ?-? EP$:"]
ignore = [
    "releasetitle:^The Get Silly EP$",
    "releasetitle:^The Up Down Left Right EP$",
    "releasetitle:^THIS IS A MAD ZOO HOUSE EP$",
]

# Genre normalization heuristics.
[[stored_metadata_rules]]
matcher = "genre:,"
actions = ["split:,"]
[[stored_metadata_rules]]
matcher = "genre://"
actions = ["split://"]
[[stored_metadata_rules]]
matcher = "genre:^kpop$:i"
actions = ["replace:K-Pop"]
[[stored_metadata_rules]]
matcher = "genre:^k-pop$"
actions = ["replace:K-Pop"]
[[stored_metadata_rules]]
matcher = "genre:^K-pop$"
actions = ["replace:K-Pop"]
[[stored_metadata_rules]]
matcher = "genre:^K-POP$"
actions = ["replace:K-Pop"]
[[stored_metadata_rules]]
matcher = "genre:^K-Pop$"
actions = ["genre:^Pop$/delete", "genre:^Korean$:i/delete"]
[[stored_metadata_rules]]
matcher = "genre:^hip-hop$:i"
actions = ["replace:Hip Hop"]
[[stored_metadata_rules]]
matcher = "genre:^Classical$"
actions = ["replace:Classical Music"]

# Label normalization heuristics.
[[stored_metadata_rules]]
matcher = "label:,"
actions = ["split:,"]
[[stored_metadata_rules]]
matcher = "label://"
actions = ["split://"]
ignore = [
    "label:^I/AM/ME$",
]
[[stored_metadata_rules]]
matcher = "label: Entertainment$"
actions = ["sed: Entertainment$:"]
[[stored_metadata_rules]]
matcher = "label: Record"
actions = ["sed: Record(ing)?s?$:"]
[[stored_metadata_rules]]
matcher = "label: Music$"
actions = ["sed: Music$:"]
[[stored_metadata_rules]]
matcher = "label: MUSIC$"
actions = ["sed: MUSIC$:"]
[[stored_metadata_rules]]
matcher = "label: LLC$"
actions = ["sed: LLC$:"]
[[stored_metadata_rules]]
matcher = "label: CG$"
actions = ["sed: CG$:"]

# Artist normalization.
[[stored_metadata_rules]]
matcher = "artist:^ROSE$:i"
actions = ["replace:ROSÉ"]
[[stored_metadata_rules]]
matcher = "artist:^heize$:i"
actions = ["replace:Heize"]
[[stored_metadata_rules]]
matcher = "artist:^Yukika$"
actions = ["replace:YUKIKA"]
[[stored_metadata_rules]]
matcher = "artist:^유키카$"
actions = ["replace:YUKIKA"]
[[stored_metadata_rules]]
matcher = "artist:^강혜원$"
actions = ["replace:Kang Hyewon"]
[[stored_metadata_rules]]
matcher = "artist:^조유리$"
actions = ["replace:Jo Yuri"]
[[stored_metadata_rules]]
matcher = "artist:^소녀시대$"
actions = ["replace:Girls' Generation"]
[[stored_metadata_rules]]
matcher = "artist:^가인$"
actions = ["replace:Gain"]
[[stored_metadata_rules]]
matcher = "artist:^브라운아이드걸스$"
actions = ["replace:Brown Eyed Girls"]
[[stored_metadata_rules]]
matcher = "artist:^태연$"
actions = ["replace:Taeyeon"]
[[stored_metadata_rules]]
matcher = "artist:^TAEYEON$"
actions = ["replace:Taeyeon"]
[[stored_metadata_rules]]
matcher = "artist:^Béla Bartók$"
actions = ["replace:Bela Bartok"]
[[stored_metadata_rules]]
matcher = "artist:^Leoš Janáček$"
actions = ["replace:Leos Janacek"]
