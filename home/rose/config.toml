music_source_dir = "~/.music-source"
ignore_release_directories = [ ".stversions" ]
rename_source_files = true
write_parent_genres = true

artist_aliases = [
    # Parents
    { artist = "BLACKPINK", aliases = ["JENNIE", "JISOO", "ROSE", "LISA"] },
    { artist = "BTS", aliases = ["V", "RM", "Rap Monster", "Jimin", "j-hope"] },
    { artist = "Brown Eyed Girls", aliases = ["Gain"] },
    { artist = "EXO", aliases = ["EXO-K", "EXO-CBX"] },
    { artist = "LE SSERAFIM", aliases = ["Huh Yunjin"] },
    { artist = "NewJeans", aliases = ["HANNI", "HAERIN", "MINJI", "DANIELLE", "HYEIN"] },
    { artist = "tripleS", aliases = ["EVOLution", "LOVElution", "+(KR)ystal Eyes", "Acid Angel from Asia", "Acid Eyes", "Aria", "NXT", "Glow", "Vision@ry Vision"] },
    # Aliases
    { artist = "Akasha System", aliases = ["DJ Panthr"] },
    { artist = "Basic Channel", aliases = ["Cyrus", "Maurizio", "Phylyps", "Quadrant", "Rhythm & Sound", "Round One", "Round Two", "Round Three", "Round Four", "Round Five"] },
    { artist = "Calvin Harris", aliases = ["Love Regenerator"] },
    { artist = "Four Tet", aliases = ["00110100 01010100", "Kieran Hebden", "⣎⡇ꉺლ༽இ•̛)ྀ◞ ༎ຶ ༽ৣৢ؞ৢ؞ؖ ꉺლ"] },
    { artist = "HyeJu", aliases = ["Olivia Hye"] },
    { artist = "Luke Vibert", aliases = ["Plug"] },
    { artist = "Matthew Dear", aliases = ["Audion"] },
    { artist = "ODD EYE CIRCLE", aliases = ["LOONA ODD EYE CIRCLE"] },
    { artist = "Yumi Matsutoya", aliases = ["Yumi Arai"] },
    { artist = "Skee Mask", aliases = ["SCNTST"] },
    # Collaborations
    { artist = "Kanye West", aliases = ["¥$"] },
    { artist = "Ty Dolla $ign", aliases = ["¥$"] },
    # Thank you BlockBerryCreative!
    { artist = "LOONA", aliases = ["LOONA 1/3", "LOONA ODD EYE CIRCLE", "LOONA yyxy", "ARTMS", "Loossemble"] },
    { artist = "LOONA 1/3", aliases = ["HaSeul", "HeeJin", "HyunJin", "ViVi"] },
    { artist = "LOONA ODD EYE CIRCLE", aliases = ["Kim Lip", "Choerry", "JinSoul"] },
    { artist = "LOONA yyxy", aliases = ["Yves", "Chuu", "Go Won", "Olivia Hye"] },
    { artist = "ARTMS", aliases = ["ODD EYE CIRCLE", "Kim Lip", "HaSeul", "HeeJin", "JinSoul", "Choerry"] },
    { artist = "Loossemble", aliases = ["ViVi", "HyunJin", "Go Won", "HyeJu", "YeoJin"] },
]

[vfs]
mount_dir = "~/tunes"

hide_genres_with_only_new_releases = true
hide_descriptors_with_only_new_releases = true
hide_labels_with_only_new_releases = true

artists_blacklist = [
    # Incidentals.
    "Disciples",
    "Rosa Walton",
    "Digital Mystikz",
    # Aliases
    "+(KR)ystal Eyes",
    "Acid Angel from Asia",
    "Acid Eyes",
    "EVOLution",
    "LOVElution",
    "Aria",
    "NXT",
    "Kieran Hebden",
    "00110100 01010100",
    "EXO-K",
    "EXO-CBX",
    "Love Regenerator",
    # Classical Performers
    "Aase Nordmo Løvberg",
    "Alceo Galliera",
    "Alice Sara Ott",
    "Andrea Marcon",
    "Anne Sofie Von Otter",
    "Anthony Rolfe-Johnson",
    "Barbara Bonney",
    "Barbara Schlick",
    "Benedictine Monks Of The Abbey Of St. Maurice & St. Maur, Clervaux",
    "Benjamin Britten",
    "Berlin Radio Symphony Orchestra",
    "Berliner Philharmoniker",
    "Bernanda Fink",
    "Bernard Haitink",
    "Bernarda Fink",
    "Birgit Nilsson",
    "Brigitte Fassbaender",
    "Bruno Walter",
    "Carlos Kleiber",
    "Catherine Robbin",
    "Chamber Orchestra of Europe",
    "Charles Brett",
    "Charles Mackerras",
    "Chicago Symphony Orchestra",
    "Chris Merritt",
    "Christa Ludwig",
    "Claudio Abbado",
    "Cleveland Orchestra",
    "Columbia Symphony Orchestra",
    "Concerto Köln",
    "Cyprien Katsaris",
    "David Pittman-Jennings",
    "Derek Lee Ragin",
    "Dietrich Fischer-Dieskau",
    "Dominique Visse",
    "Eduard van Beinum",
    "Elly Ameling",
    "Emil Gilels",
    "English Baroque Soloists",
    "Eugen Jochum",
    "Eugene Goossens",
    "Eugene Ormandy",
    "European Brandenburg Ensemble",
    "Franz Konwitschny",
    "Frederica von Stade",
    "Fritz Reiner",
    "Fritz Wunderlich",
    "Furio Zanasi",
    "Georg Friedrich Handel",
    "Gabrieli Consort",
    "Gabrieli Players",
    "George Szell",
    "Gerhard Stolze",
    "Gianandrea Noseda",
    "Giuliano Carmignola",
    "Glyndebourne Chorus",
    "Grabrieli Consort",
    "Grabrieli Players",
    "Guiliano Carmignola",
    "Hans Hotter",
    "Igor Oistrakh",
    "Ivo Pogorelich",
    "Jennifer Larmore",
    "Juilliard String Quartet",
    "Julius Patzak",
    "Jörg Demus",
    "Karlheinz Zöller",
    "Kathleen Ferrier",
    "Kiri Te Kanawa",
    "Krystian Zimerman",
    "Kurt Moll",
    "Leningrad Philharmonic Orchestra",
    "London Oratory Junior Choir",
    "London Philharmonic Orchestra",
    "London Symphony Orchestra",
    "Louis Lane",
    "Lucia Popp",
    "Margaret Marshall",
    "Marianne Rørholm",
    "Marie Collier",
    "Monteverdi Choir",
    "New York Philharmonic Orchestra",
    "New York Philharmonic",
    "Nielsen",
    "Olivier Lallouette",
    "Orchestre de l'Opéra de Paris",
    "Paul McCreesh",
    "Paul van Kempen",
    "Philadelphia Orchestra",
    "Philharmonia Chorus",
    "Philharmonia Orchestra",
    "Philharmonia",
    "Regina Resnik",
    "René Jacobs",
    "Robert Hale",
    "Royal Concertgebouw Orchestra",
    "Royal Philharmonic Orchestra",
    "Russian State Symphony Orchestra",
    "Samuel Ramey",
    "Saul Quirke",
    "Simon Rattle",
    "Sir Georg Solti",
    "Sir John Eliot Gardiner",
    "Staatskapelle Dresden",
    "Stephen Kovacevich",
    "Symphonieorchester des Bayerischen Rundfunks",
    "The Cleveland Orchestra",
    "The Monteverdi Choir",
    "Thomas Allen",
    "Thomas Moser",
    "Tom Krause",
    "Venice Baroque Orchestra",
    "Vienna Philharmonic Orchestra",
    "Vienna Symphony Orchestra",
    "Waldemar Kmentt",
    "Warsaw Philharmonic Orchestra",
    "Wiener Philharmoniker",
    "Wiener Staatsopernchor",
    "Wilhelm Kempff",
]

[path_templates]
default.release = """
{% if new %}^{% endif %}
{% if "Classical Music" in genres + parentgenres and releaseartists.composer | length > 0 %}
    {{ releaseartists.composer | map(attribute='name') | map('lastname') | arrayfmt }} -
    {% if compositionyear %}{{ compositionyear }}.{% endif %}
    {{ releasetitle }} -
    {{ releaseartists | artistsfmt(omit=["composer", "guest"]) }}
    {% if releasedate or originaldate %}({{ (originaldate or releasedate).year }}){% endif %}
{% else %}
    {{ releaseartists | artistsfmt }} -
    {% if releasedate or originaldate %}{{ (originaldate or releasedate).year }}.{% endif %}
    {{ releasetitle }}
    {% if releasetype == "single" or (releasetype == "ep" and not releasetitle.endswith("EP")) %}- {{ releasetype | releasetypefmt }}{% endif %}
    {% if edition %}({{ edition }}){% endif %}
    {% if genres %}[{{ genres | arrayfmt }}]{% endif %}
{% endif %}
"""
default.track = """
{% if disctotal > 1 %}{{ discnumber.rjust(2, '0') }}-{% endif %}{{ tracknumber.rjust(2, '0') }}.
{% if trackartists.main != releaseartists.main %}{{ trackartists.main | artistsarrayfmt }} -{% endif %}
{{ tracktitle }}
{% if trackartists.guest %}(feat. {{ trackartists.guest | artistsarrayfmt }}){% endif %}
"""
# Avoid too much churn in source directory names, so only include relatively
# stable identifiers.
source.release = """
{% if "Classical Music" in genres + parentgenres and releaseartists.composer | length > 0 %}
    {{ releaseartists.composer | map(attribute='name') | map('lastname') | arrayfmt }} -
    {% if compositionyear %}{{ compositionyear }}.{% endif %}
    {{ releasetitle }} -
    {{ releaseartists | artistsfmt(omit=["composer", "guest"]) }}
    {% if releasedate or originaldate %}({{ (originaldate or releasedate).year }}){% endif %}
{% else %}
    {{ releaseartists | artistsfmt }} -
    {% if releasedate or originaldate %}{{ (originaldate or releasedate).year }}.{% endif %}
    {{ releasetitle }}
    {% if releasetype == "single" or (releasetype == "ep" and not releasetitle.endswith("EP")) %}- {{ releasetype | releasetypefmt }}{% endif %}
    {% if edition %}({{ edition }}){% endif %}
{% endif %}
"""
releases.release = """
{% if new %}^{% endif %}
{% if "Classical Music" in genres + parentgenres and releaseartists.composer | length > 0 %}
    {{ releaseartists.composer | map(attribute='name') | map('lastname') | arrayfmt }} -
    {% if releasetype == "single" %}x{% endif %}{% if compositionyear %}{{ compositionyear }}.{% endif %}
    {{ releasetitle }} -
    {{ releaseartists | artistsfmt(omit=["composer", "guest"]) }}
    {% if releasedate or originaldate %}({{ originaldate or releasedate }}){% endif %}
    {% if genres %}[{{ genres | select("ne", "Classical Music") | arrayfmt }}]{% endif %}
{% else %}
    {{ releaseartists | artistsfmt }} -
    {% if releasedate or originaldate %}{{ originaldate or releasedate }}.{% endif %}
    {{ releasetitle }}
    {% if releasetype == "single" or (releasetype == "ep" and not releasetitle.endswith("EP")) %}- {{ releasetype | releasetypefmt }}{% endif %}
    {% if edition %}({{ edition }}){% endif %}
    {% if genres %}[{{ genres | arrayfmt }}]{% endif %}
    {% if labels %}{{ '{' }}{{ labels | arrayfmt }}{{ '}' }}{% endif %}
{% endif %}
"""
releases_new.release = """
{% if "Classical Music" in genres + parentgenres and releaseartists.composer | length > 0 %}
    {{ releaseartists.composer | map(attribute='name') | map('lastname') | arrayfmt }} -
    {% if releasetype == "single" %}x{% endif %}{% if compositionyear %}{{ compositionyear }}.{% endif %}
    {{ releasetitle }} -
    {{ releaseartists | artistsfmt(omit=["composer", "guest"]) }}
    {% if releasedate or originaldate %}({{ originaldate or releasedate }}){% endif %}
    {% if genres %}[{{ genres | select("ne", "Classical Music") | arrayfmt }}]{% endif %}
{% else %}
    {{ releaseartists | artistsfmt }} -
    {% if releasedate or originaldate %}{{ originaldate or releasedate }}.{% endif %}
    {{ releasetitle }}
    {% if releasetype == "single" or (releasetype == "ep" and not releasetitle.endswith("EP")) %}- {{ releasetype | releasetypefmt }}{% endif %}
    {% if edition %}({{ edition }}){% endif %}
    {% if genres %}[{{ genres | arrayfmt }}]{% endif %}
    {% if labels %}{{ '{' }}{{ labels | arrayfmt }}{{ '}' }}{% endif %}
{% endif %}
"""
releases_added_on.release = """
[{{ added_at[:10] }}.{{ added_at[11:13] }}]{% if new %}^{% endif %}
{% if "Classical Music" in genres + parentgenres and releaseartists.composer | length > 0 %}
    {{ releaseartists.composer | map(attribute='name') | map('lastname') | arrayfmt }} -
    {% if releasetype == "single" %}x{% endif %}{% if compositionyear %}{{ compositionyear }}.{% endif %}
    {{ releasetitle }} -
    {{ releaseartists | artistsfmt(omit=["composer", "guest"]) }}
    {% if releasedate or originaldate %}({{ originaldate or releasedate }}){% endif %}
    {% if genres %}[{{ genres | select("ne", "Classical Music") | arrayfmt }}]{% endif %}
{% else %}
    {{ releaseartists | artistsfmt }} -
    {% if releasedate or originaldate %}{{ originaldate or releasedate }}.{% endif %}
    {{ releasetitle }}
    {% if releasetype == "single" or (releasetype == "ep" and not releasetitle.endswith("EP")) %}- {{ releasetype | releasetypefmt }}{% endif %}
    {% if edition %}({{ edition }}){% endif %}
    {% if genres %}[{{ genres | arrayfmt }}]{% endif %}
    {% if labels %}{{ '{' }}{{ labels | arrayfmt }}{{ '}' }}{% endif %}
{% endif %}
"""
releases_released_on.release = """
[{{ originaldate or releasedate or "0000" }}]{% if new %}^{% endif %}
{% if "Classical Music" in genres + parentgenres and releaseartists.composer | length > 0 %}
    {{ releaseartists.composer | map(attribute='name') | map('lastname') | arrayfmt }} -
    {% if compositionyear %}{{ compositionyear }}.{% endif %}
    {{ releasetitle }} -
    {{ releaseartists | artistsfmt(omit=["composer", "guest"]) }}
{% else %}
    {{ releaseartists | artistsfmt }} -
    {{ releasetitle }}
    {% if releasetype == "single" or (releasetype == "ep" and not releasetitle.endswith("EP")) %}- {{ releasetype | releasetypefmt }}{% endif %}
    {% if edition %}({{ edition }}){% endif %}
    {% if genres %}[{{ genres | arrayfmt }}]{% endif %}
{% endif %}
"""
artists.release = """
[{{ releasetype | releasetypefmt }}]{% if new %}^{% endif %}
{% if releasedate or originaldate %}{{ (originaldate or releasedate) }}.{% else %}0000-00-00.{% endif %}
{{ releaseartists | artistsfmt }} -
{{ releasetitle }}
{% if edition %}({{ edition }}){% endif %}
{% if labels %}{{ '{' }}{{ labels | arrayfmt }}{{ '}' }}{% endif %}
"""
genres.release = """
{% if new %}^{% endif %}
{% if context.genre not in genres + parentgenres %}
    ~
{% endif %}
{% if context.genre in ["Classical Music", "Western Classical Music"] %}
    {% if releaseartists.composer | length == 0 %}
        [Z]
        {{ releaseartists | artistsfmt }} -
        {% if releasedate or originaldate %}{{ (originaldate or releasedate).year }}.{% endif %}
        {{ releasetitle }}
    {% elif releasetype == "live" %}
        [L]
        {{ releaseartists.main | artistsarrayfmt }} -
        {% if releasedate or originaldate %}{{ (originaldate or releasedate).year }}.{% endif %}
        {{ releasetitle }}
        by {{ releaseartists.composer | map(attribute='name') | map('lastname') | arrayfmt }}
    {% else %}
        {% if compositiondate %}{{ compositiondate.year }}{% endif %}
        {{ releaseartists.composer | map(attribute='name') | map('lastname') | arrayfmt }} -
        {{ releasetitle }} -
        {{ releaseartists | artistsfmt(omit=["composer", "guest"]) }}
        {% if releasedate or originaldate %}({{ (originaldate or releasedate).year }}){% endif %}
    {% endif %}
{% else %}
    {{ releaseartists | artistsfmt }} -
    {% if releasedate or originaldate %}{{ (originaldate or releasedate).year }}.{% endif %}
    {{ releasetitle }}
    {% if releasetype == "single" or (releasetype == "ep" and not releasetitle.endswith("EP")) %}- {{ releasetype | releasetypefmt }}{% endif %}
    {% if edition %}({{ edition }}){% endif %}
    {% set altgenres = genres | reject("eq", context.genre) | list %}
    {% if altgenres | length > 0 %}[{{ altgenres | arrayfmt }}]{% endif %}
{% endif %}
"""
labels.release = """
{% if context.label in ["Regelbau", "Basic Channel", "Ilian Tape"] %}
    [{{ catalognumber }}]{% if new %}^{% endif %}
    {{ releaseartists | artistsfmt }} -
    {% if releasedate or originaldate %}{{ (originaldate or releasedate).year }}.{% endif %}
    {{ releasetitle }}
    {% if releasetype == "single" or (releasetype == "ep" and not releasetitle.endswith("EP")) %}- {{ releasetype | releasetypefmt }}{% endif %}
    {% if edition %}({{ edition }}){% endif %}
{% else %}
    [{{ originaldate or releasedate or "0000-00-00" }}]{% if new %}^{% endif %}
    {{ releaseartists | artistsfmt }} -
    {{ releasetitle }}
    {% if releasetype == "single" or (releasetype == "ep" and not releasetitle.endswith("EP")) %}- {{ releasetype | releasetypefmt }}{% endif %}
    {% if edition %}({{ edition }}){% endif %}
{% endif %}
"""
collages.release = """
{{ position }}.
{% if new %}^{% endif %}
{% if "Classical Music" in genres + parentgenres and releaseartists.composer | length > 0 %}
    {{ releaseartists.composer | map(attribute='name') | map('lastname') | arrayfmt }} -
    {% if releasetype == "single" %}x{% endif %}{% if compositionyear %}{{ compositionyear }}.{% endif %}
    {{ releasetitle }} -
    {{ releaseartists | artistsfmt(omit=["composer", "guest"]) }}
    {% if releasedate or originaldate %}({{ originaldate or releasedate }}){% endif %}
    {% if genres %}[{{ genres | select("ne", "Classical Music") | arrayfmt }}]{% endif %}
{% else %}
    {{ releaseartists | artistsfmt }} -
    {% if releasedate or originaldate %}{{ originaldate or releasedate }}.{% endif %}
    {{ releasetitle }}
    {% if releasetype == "single" or (releasetype == "ep" and not releasetitle.endswith("EP")) %}- {{ releasetype | releasetypefmt }}{% endif %}
    {% if edition %}({{ edition }}){% endif %}
    {% if genres %}[{{ genres | arrayfmt }}]{% endif %}
    {% if labels %}{{ '{' }}{{ labels | arrayfmt }}{{ '}' }}{% endif %}
{% endif %}
"""
playlists = """
{% if context.playlist.startswith("+") and (originaldate or releasedate) %}
    [{{ originaldate or releasedate }}]
{% else %}
    {{ position }}.
{% endif %}
{{ trackartists | artistsfmt }} -
{{ tracktitle }}
"""

# Artist splitting.
[[stored_metadata_rules]]
matcher = "artist:,"
actions = ["split:,"]
ignore = [
    "artist:^Seo Taiji, Boys$",
    "artist:^Benedictine Monks Of The Abbey Of St. Maurice & St. Maur, Clervaux$",
]
[[stored_metadata_rules]]
matcher = "artist: & "
actions = ["split: & "]
ignore = [
    "artist:^Eli & Fur$",
    "artist:^Jos & Eli$",
    "artist:^Camo & Krooked$",
    "artist:^Drumsound & Bassline Smith$",
    "artist:^Benedictine Monks Of The Abbey Of St. Maurice & St. Maur, Clervaux$",
]
[[stored_metadata_rules]]
matcher = "artist:\\\\"
actions = ["split:\\\\"]
[[stored_metadata_rules]]
matcher = "artist: // "
actions = ["split: // "]
[[stored_metadata_rules]]
matcher = "artist: with "
actions = ["split: with "]
[[stored_metadata_rules]]
matcher = "artist: + "
actions = ["split: + "]

# Disk number fixing
[[stored_metadata_rules]]
matcher = "discnumber:^0$"
actions = ["replace:1"]

# Garbage date fix.
[[stored_metadata_rules]]
matcher = "originaldate:^0000$"
actions = ["delete"]
[[stored_metadata_rules]]
matcher = "releasedate:^0000$"
actions = ["delete"]

# Character normalization. The replacements are not stylistically correct, but
# I can input them.
[[stored_metadata_rules]]
matcher = "tracktitle,releasetitle,artist,genre,label:‐"
actions = ["sed:‐:-"]
[[stored_metadata_rules]]
matcher = "tracktitle,releasetitle,artist,genre,label:’"
actions = ["sed:’:'"]
[[stored_metadata_rules]]
matcher = "tracktitle,releasetitle,artist,genre,label:‘"
actions = ["sed:‘:'"]
[[stored_metadata_rules]]
matcher = "tracktitle,releasetitle,artist,genre,label:“"
actions = ["sed:“:\""]
[[stored_metadata_rules]]
matcher = "tracktitle,releasetitle,artist,genre,label:”"
actions = ["sed:”:\""]

# Release type heuristics.
[[stored_metadata_rules]]
matcher = "releasetitle: EP$"
actions = ["releasetype/replace:ep", "releasetitle/sed: ?-? EP$:"]
ignore = [
    "releasetitle:^The Get Silly EP$",
    "releasetitle:^The Up Down Left Right EP$",
]

# Genre normalization heuristics.
[[stored_metadata_rules]]
matcher = "genre:,"
actions = ["split:,"]
[[stored_metadata_rules]]
matcher = "genre://"
actions = ["split://"]
[[stored_metadata_rules]]
matcher = "genre:^Classical$"
actions = ["replace:Classical Music"]
[[stored_metadata_rules]]
matcher = "genre:^Drum n Bass$"
actions = ["replace:Drum and Bass"]
[[stored_metadata_rules]]
matcher = "genre:^Drum & Bass$"
actions = ["replace:Drum and Bass"]
[[stored_metadata_rules]]
matcher = "genre:^kpop$:i"
actions = ["replace:K-Pop"]
[[stored_metadata_rules]]
matcher = "genre:^K-pop$"
actions = ["replace:K-Pop"]
[[stored_metadata_rules]]
matcher = "genre:^K-POP$"
actions = ["replace:K-Pop"]
[[stored_metadata_rules]]
matcher = "genre:^jpop$:i"
actions = ["replace:J-Pop"]

# Label normalization heuristics.
[[stored_metadata_rules]]
matcher = "label: LLC$"
actions = ["sed:,? LLC$:"]
[[stored_metadata_rules]]
matcher = "label: CG$"
actions = ["sed: CG$:"]
[[stored_metadata_rules]]
matcher = "label: Entertainment$"
actions = ["sed: Entertainment$:"]
[[stored_metadata_rules]]
matcher = "label: Group"
actions = ["sed: Group$:"]
[[stored_metadata_rules]]
matcher = "label: Record"
actions = ["sed: Record(ing)?s?$:"]
[[stored_metadata_rules]]
matcher = "label: Music$"
actions = ["sed: Music$:"]
[[stored_metadata_rules]]
matcher = "label: MUSIC$"
actions = ["sed: MUSIC$:"]
[[stored_metadata_rules]]
matcher = "label:,"
actions = ["split:,"]
[[stored_metadata_rules]]
matcher = "label://"
actions = ["split://"]
ignore = [
    "label:^I/AM/ME$",
    "label:^CBS/Sony$",
]

# Artist normalization.
[[stored_metadata_rules]]
matcher = "artist:^ROSÉ$"
actions = ["replace:ROSE"]
[[stored_metadata_rules]]
matcher = "artist:^heize$:i"
actions = ["replace:Heize"]
[[stored_metadata_rules]]
matcher = "artist:^Yukika$"
actions = ["replace:YUKIKA"]
[[stored_metadata_rules]]
matcher = "artist:^유키카$"
actions = ["replace:YUKIKA"]
[[stored_metadata_rules]]
matcher = "artist:^강혜원$"
actions = ["replace:Kang Hyewon"]
[[stored_metadata_rules]]
matcher = "artist:^조유리$"
actions = ["replace:Jo Yuri"]
[[stored_metadata_rules]]
matcher = "artist:^소녀시대$"
actions = ["replace:Girls' Generation"]
[[stored_metadata_rules]]
matcher = "artist:^가인$"
actions = ["replace:Gain"]
[[stored_metadata_rules]]
matcher = "artist:^브라운아이드걸스$"
actions = ["replace:Brown Eyed Girls"]
[[stored_metadata_rules]]
matcher = "artist:^태연$"
actions = ["replace:Taeyeon"]
[[stored_metadata_rules]]
matcher = "artist:^TAEYEON$"
actions = ["replace:Taeyeon"]
[[stored_metadata_rules]]
matcher = "artist:^러블리즈$"
actions = ["replace:Lovelyz"]
[[stored_metadata_rules]]
matcher = "artist:^Béla Bartók$"
actions = ["replace:Bela Bartok"]
[[stored_metadata_rules]]
matcher = "artist:^Leoš Janáček$"
actions = ["replace:Leos Janacek"]
